---
- hosts: live,stage
  vars_files:
    - "../config.yml"
  vars:
    project_base_path: "/var/www/chessdb"
    project_sub_path: "master"
  tasks:
    # "dns" hack
    - name: set /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        line: "{{ ansible_ssh_host }} {{project_sub_path}}.{{ ansible_fqdn }}"
      when: project_sub_path != ""
      delegate_to: jenkins

    - set_fact:
        project_path: "{{ project_base_path }}/{{ project_sub_path }}"

    - name: ensure project path exists
      become: true
      file:
        path: "{{ project_path }}"
        state: directory
        owner: vagrant
        group: vagrant
        recurse: true 

    - name: set project dir acl
      become: true
      acl:
        path: "{{ project_path }}"
        entity: "{{ item[0] }}"
        etype: user
        permissions: "rwx"
        state: present
        recursive: true
        default: "{{ item[1] }}"
      with_nested:
        - ["{{ ansible_user_id }}", "www-data"]
        - [false, true]

    - name: Initialize the deploy root and gather facts
      become: true
      deploy_helper:
        path: "{{ project_path }}"

    # detect first deployment
    - stat: path={{ deploy_helper.current_path }}
      register: current_deployment

    - name: create new relase path
      file:
        path: "{{ deploy_helper.new_release_path }}"
        state: directory

    - name: extract tarball to new release directory
      unarchive:
        src: ../chessdb.tar.gz
        dest: "{{ deploy_helper.new_release_path }}"

    - name: Add an unfinished file, to allow cleanup on successful finalize
      file: 
        path: "{{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }}"
        state: touch

    - name: set configs in parameters.yml
      lineinfile:
        dest:   "{{ deploy_helper.new_release_path }}/app/config/parameters.yml"
        line:   "    {{ item.key }}: {{ item.value }}"
        regexp: "^    {{ item.key }}:"
      with_items:
        - { key: 'database_name', value: "chessdb_{{ project_sub_path }}" }

    - name: run init command at first deplyoment
      when: false == current_deployment.stat.exists      
      make:
        chdir: "{{ deploy_helper.new_release_path }}"
        target: database-create
        params:
          ENV: prod

    - name: Finalize the deploy, removing the unfinished file and switching the symlink
      deploy_helper: 
        path: "{{ project_path }}"
        release: "{{ deploy_helper.new_release }}"
        state: finalize

