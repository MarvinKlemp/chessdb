---
- name: intall tool packages
  apt: name={{ item }}
  with_items:
    - git
    - php-xdebug

- name: check if composer is installed
  stat: 
    path: /usr/local/bin/composer
  register: composer_state

- block:
  - name: get composer signature
    uri:
      url: https://composer.github.io/installer.sig
      return_content: true
    register: composer_sig

  - name: download installer
    get_url:
      url: https://getcomposer.org/installer
      dest: /tmp/composer-setup.php
      checksum: "sha384:{{ composer_sig.content }}"

  - name: install composer
    command: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
  when: composer_state.stat.exists == false


- name: install php phar qa tools
  get_url:
    url: "{{ item.value }}"
    dest: "/usr/local/bin/{{ item.key }}"
    mode: 0755
  with_dict:
    #deprecation-detector: https://github.com/sensiolabs-de/deprecation-detector/releases/download/0.1.0-alpha4/deprecation-detector.phar
    #pdepend: http://static.pdepend.org/php/latest/pdepend.phar
    deptrac: http://get.sensiolabs.de/deptrac.phar
    insight: http://get.insight.sensiolabs.com/insight.phar
    phpcbf: https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar
    phpcpd: https://phar.phpunit.de/phpcpd.phar
    phpcs: https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
    phpmd: http://static.phpmd.org/php/latest/phpmd.phar
    security-checker: http://get.sensiolabs.org/security-checker.phar
    symfony: https://symfony.com/installer

- block:
  - name: ensure insight config dir
    file:
      path: "{{ webserver.config_home }}/.sensiolabs"
      state: directory     

  - name: place insight config
    become_user: "{{ webserver.config_user }}"
    template:
      dest: "{{ webserver.config_home }}/.sensiolabs/insight.json"
      src: insight.json.j2
  become_user: "{{ webserver.config_user }}"
  when: (insight is defined) and
        (insight.user_uuid is defined) and
        (insight.api_token is defined) and 
        (insight.api_endpoint is defined)

